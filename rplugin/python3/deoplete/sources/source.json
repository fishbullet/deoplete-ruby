[
  { "word": "try_convert", "kind": "String" },
  { "word": "ascii_only?", "kind": "String" },
  { "word": "b", "kind": "String" },
  { "word": "bytes", "kind": "String" },
  { "word": "bytesize", "kind": "String" },
  { "word": "byteslice", "kind": "String" },
  { "word": "capitalize", "kind": "String" },
  { "word": "capitalize!", "kind": "String" },
  { "word": "casecmp", "kind": "String" },
  { "word": "center", "kind": "String" },
  { "word": "chars", "kind": "String" },
  { "word": "chomp", "kind": "String" },
  { "word": "chomp!", "kind": "String" },
  { "word": "chop", "kind": "String" },
  { "word": "chop!", "kind": "String" },
  { "word": "chr", "kind": "String" },
  { "word": "clear", "kind": "String" },
  { "word": "codepoints", "kind": "String" },
  { "word": "concat", "kind": "String" },
  { "word": "count", "kind": "String" },
  { "word": "crypt", "kind": "String" },
  { "word": "delete", "kind": "String" },
  { "word": "delete!", "kind": "String" },
  { "word": "downcase", "kind": "String" },
  { "word": "downcase!", "kind": "String" },
  { "word": "dump", "kind": "String" },
  { "word": "each_byte", "kind": "String" },
  { "word": "each_char", "kind": "String" },
  { "word": "each_codepoint", "kind": "String" },
  { "word": "each_line", "kind": "String" },
  { "word": "empty?", "kind": "String" },
  { "word": "encode", "kind": "String" },
  { "word": "encode!", "kind": "String" },
  { "word": "encoding", "kind": "String" },
  { "word": "end_with?", "kind": "String" },
  { "word": "eql?", "kind": "String" },
  { "word": "force_encoding", "kind": "String" },
  { "word": "freeze", "kind": "String" },
  { "word": "getbyte", "kind": "String" },
  { "word": "gsub", "kind": "String" },
  { "word": "gsub!", "kind": "String" },
  { "word": "hash", "kind": "String" },
  { "word": "hex", "kind": "String" },
  { "word": "include?", "kind": "String" },
  { "word": "index", "kind": "String" },
  { "word": "initialize_copy", "kind": "String" },
  { "word": "insert", "kind": "String" },
  { "word": "inspect", "kind": "String" },
  { "word": "intern", "kind": "String" },
  { "word": "length", "kind": "String" },
  { "word": "lines", "kind": "String" },
  { "word": "ljust", "kind": "String" },
  { "word": "lstrip", "kind": "String" },
  { "word": "lstrip!", "kind": "String" },
  { "word": "match", "kind": "String" },
  { "word": "next", "kind": "String" },
  { "word": "next!", "kind": "String" },
  { "word": "oct", "kind": "String" },
  { "word": "ord", "kind": "String" },
  { "word": "prepend", "kind": "String" },
  { "word": "replace", "kind": "String" },
  { "word": "reverse", "kind": "String" },
  { "word": "reverse!", "kind": "String" },
  { "word": "rindex", "kind": "String" },
  { "word": "rjust", "kind": "String" },
  { "word": "rpartition", "kind": "String" },
  { "word": "rstrip", "kind": "String" },
  { "word": "rstrip!", "kind": "String" },
  { "word": "scan", "kind": "String" },
  { "word": "scrub", "kind": "String" },
  { "word": "scrub!", "kind": "String" },
  { "word": "setbyte", "kind": "String" },
  { "word": "size", "kind": "String" },
  { "word": "slice", "kind": "String" },
  { "word": "slice!", "kind": "String" },
  { "word": "split", "kind": "String" },
  { "word": "squeeze", "kind": "String" },
  { "word": "squeeze!", "kind": "String" },
  { "word": "start_with?", "kind": "String" },
  { "word": "strip", "kind": "String" },
  { "word": "strip!", "kind": "String" },
  { "word": "sub", "kind": "String" },
  { "word": "sub!", "kind": "String" },
  { "word": "succ", "kind": "String" },
  { "word": "succ!", "kind": "String" },
  { "word": "sum", "kind": "String" },
  { "word": "swapcase", "kind": "String" },
  { "word": "swapcase!", "kind": "String" },
  { "word": "to_c", "kind": "String" },
  { "word": "to_f", "kind": "String" },
  { "word": "to_i", "kind": "String" },
  { "word": "to_r", "kind": "String" },
  { "word": "to_s", "kind": "String" },
  { "word": "to_str", "kind": "String" },
  { "word": "to_sym", "kind": "String" },
  { "word": "tr", "kind": "String" },
  { "word": "tr!", "kind": "String" },
  { "word": "tr_s", "kind": "String" },
  { "word": "tr_s!", "kind": "String" },
  { "word": "unpack", "kind": "String" },
  { "word": "upcase", "kind": "String" },
  { "word": "upcase!", "kind": "String" },
  { "word": "upto", "kind": "String" },
  { "word": "valid_encoding?", "kind": "String" },
  { "word": "any?", "kind": "Array" },
  { "word": "assoc", "kind": "Array" },
  { "word": "at", "kind": "Array" },
  { "word": "bsearch", "kind": "Array" },
  { "word": "bsearch_index", "kind": "Array" },
  { "word": "clear", "kind": "Array" },
  { "word": "collect", "kind": "Array" },
  { "word": "collect!", "kind": "Array" },
  { "word": "combination", "kind": "Array" },
  { "word": "compact", "kind": "Array" },
  { "word": "compact!", "kind": "Array" },
  { "word": "concat", "kind": "Array" },
  { "word": "count", "kind": "Array" },
  { "word": "cycle", "kind": "Array" },
  { "word": "delete", "kind": "Array" },
  { "word": "delete_at", "kind": "Array" },
  { "word": "delete_if", "kind": "Array" },
  { "word": "dig", "kind": "Array" },
  { "word": "drop", "kind": "Array" },
  { "word": "drop_while", "kind": "Array" },
  { "word": "each", "kind": "Array" },
  { "word": "each_index", "kind": "Array" },
  { "word": "empty?", "kind": "Array" },
  { "word": "eql?", "kind": "Array" },
  { "word": "fetch", "kind": "Array" },
  { "word": "fill", "kind": "Array" },
  { "word": "find_index", "kind": "Array" },
  { "word": "first", "kind": "Array" },
  { "word": "flatten", "kind": "Array" },
  { "word": "flatten!", "kind": "Array" },
  { "word": "frozen?", "kind": "Array" },
  { "word": "hash", "kind": "Array" },
  { "word": "include?", "kind": "Array" },
  { "word": "index", "kind": "Array" },
  { "word": "initialize_copy", "kind": "Array" },
  { "word": "insert", "kind": "Array" },
  { "word": "inspect", "kind": "Array" },
  { "word": "join", "kind": "Array" },
  { "word": "keep_if", "kind": "Array" },
  { "word": "last", "kind": "Array" },
  { "word": "length", "kind": "Array" },
  { "word": "map", "kind": "Array" },
  { "word": "map!", "kind": "Array" },
  { "word": "pack", "kind": "Array" },
  { "word": "permutation", "kind": "Array" },
  { "word": "pop", "kind": "Array" },
  { "word": "product", "kind": "Array" },
  { "word": "push", "kind": "Array" },
  { "word": "rassoc", "kind": "Array" },
  { "word": "reject", "kind": "Array" },
  { "word": "reject!", "kind": "Array" },
  { "word": "repeated_combination", "kind": "Array" },
  { "word": "repeated_permutation", "kind": "Array" },
  { "word": "reverse", "kind": "Array" },
  { "word": "reverse!", "kind": "Array" },
  { "word": "reverse_each", "kind": "Array" },
  { "word": "rindex", "kind": "Array" },
  { "word": "rotate", "kind": "Array" },
  { "word": "rotate!", "kind": "Array" },
  { "word": "sample", "kind": "Array" },
  { "word": "select", "kind": "Array" },
  { "word": "select!", "kind": "Array" },
  { "word": "shift", "kind": "Array" },
  { "word": "shuffle", "kind": "Array" },
  { "word": "shuffle!", "kind": "Array" },
  { "word": "size", "kind": "Array" },
  { "word": "slice", "kind": "Array" },
  { "word": "slice!", "kind": "Array" },
  { "word": "sort", "kind": "Array" },
  { "word": "sort!", "kind": "Array" },
  { "word": "sort_by!", "kind": "Array" },
  { "word": "take_while", "kind": "Array" },
  { "word": "to_a", "kind": "Array" },
  { "word": "to_ary", "kind": "Array" },
  { "word": "to_h", "kind": "Array" },
  { "word": "transpose", "kind": "Array" },
  { "word": "uniq", "kind": "Array" },
  { "word": "uniq!", "kind": "Array" },
  { "word": "unshift", "kind": "Array" },
  { "word": "values_at", "kind": "Array" },
  { "word": "zip", "kind": "Array" },
  { "word": "__id__", "kind": "BasicObject" },
  { "word": "__send__", "kind": "BasicObject" },
  { "word": "equal?", "kind": "BasicObject" },
  { "word": "instance_eval", "kind": "BasicObject" },
  { "word": "instance_exec", "kind": "BasicObject" },
  { "word": "method_missing", "kind": "BasicObject" },
  { "word": "singleton_method_added", "kind": "BasicObject" },
  { "word": "singleton_method_removed", "kind": "BasicObject" },
  { "word": "singleton_method_undefined", "kind": "BasicObject" },
  { "word": "abs", "kind": "Bignum" },
  { "word": "bit_length", "kind": "Bignum" },
  { "word": "coerce", "kind": "Bignum" },
  { "word": "div", "kind": "Bignum" },
  { "word": "divmod", "kind": "Bignum" },
  { "word": "eql?", "kind": "Bignum" },
  { "word": "even?", "kind": "Bignum" },
  { "word": "fdiv", "kind": "Bignum" },
  { "word": "hash", "kind": "Bignum" },
  { "word": "inspect", "kind": "Bignum" },
  { "word": "magnitude", "kind": "Bignum" },
  { "word": "modulo", "kind": "Bignum" },
  { "word": "odd?", "kind": "Bignum" },
  { "word": "remainder", "kind": "Bignum" },
  { "word": "size", "kind": "Bignum" },
  { "word": "to_f", "kind": "Bignum" },
  { "word": "allocate" },
  { "word": "inherited" },
  { "word": "new" },
  { "word": "superclass" },
  { "word": "abs", "kind": "Complex" },
  { "word": "abs2", "kind": "Complex" },
  { "word": "angle", "kind": "Complex" },
  { "word": "arg", "kind": "Complex" },
  { "word": "conj", "kind": "Complex" },
  { "word": "conjugate", "kind": "Complex" },
  { "word": "denominator", "kind": "Complex" },
  { "word": "fdiv", "kind": "Complex" },
  { "word": "imag", "kind": "Complex" },
  { "word": "imaginary", "kind": "Complex" },
  { "word": "inspect", "kind": "Complex" },
  { "word": "magnitude", "kind": "Complex" },
  { "word": "numerator", "kind": "Complex" },
  { "word": "phase", "kind": "Complex" },
  { "word": "polar", "kind": "Complex" },
  { "word": "quo", "kind": "Complex" },
  { "word": "rationalize", "kind": "Complex" },
  { "word": "real", "kind": "Complex" },
  { "word": "real?", "kind": "Complex" },
  { "word": "rect", "kind": "Complex" },
  { "word": "rectangular", "kind": "Complex" },
  { "word": "to_c", "kind": "Complex" },
  { "word": "to_f", "kind": "Complex" },
  { "word": "to_i", "kind": "Complex" },
  { "word": "to_r", "kind": "Complex" },
  { "word": "chdir", "kind": "Dir" },
  { "word": "chroot", "kind": "Dir" },
  { "word": "delete", "kind": "Dir" },
  { "word": "entries", "kind": "Dir" },
  { "word": "exist?", "kind": "Dir" },
  { "word": "exists?", "kind": "Dir" },
  { "word": "foreach", "kind": "Dir" },
  { "word": "getwd", "kind": "Dir" },
  { "word": "glob", "kind": "Dir" },
  { "word": "home", "kind": "Dir" },
  { "word": "mkdir", "kind": "Dir" },
  { "word": "new", "kind": "Dir" },
  { "word": "open", "kind": "Dir" },
  { "word": "pwd", "kind": "Dir" },
  { "word": "rmdir", "kind": "Dir" },
  { "word": "unlink", "kind": "Dir" },
  { "word": "close", "kind": "Dir" },
  { "word": "each", "kind": "Dir" },
  { "word": "fileno", "kind": "Dir" },
  { "word": "inspect", "kind": "Dir" },
  { "word": "path", "kind": "Dir" },
  { "word": "pos", "kind": "Dir" },
  { "word": "pos=", "kind": "Dir" },
  { "word": "read", "kind": "Dir" },
  { "word": "rewind", "kind": "Dir" },
  { "word": "seek", "kind": "Dir" },
  { "word": "tell", "kind": "Dir" },
  { "word": "to_path", "kind": "Dir" },
  { "word": "assoc", "kind": "ENV" },
  { "word": "clear", "kind": "ENV" },
  { "word": "delete", "kind": "ENV" },
  { "word": "delete_if", "kind": "ENV" },
  { "word": "each", "kind": "ENV" },
  { "word": "each_key", "kind": "ENV" },
  { "word": "each_pair", "kind": "ENV" },
  { "word": "each_value", "kind": "ENV" },
  { "word": "empty?", "kind": "ENV" },
  { "word": "fetch", "kind": "ENV" },
  { "word": "has_key?", "kind": "ENV" },
  { "word": "has_value?", "kind": "ENV" },
  { "word": "include?", "kind": "ENV" },
  { "word": "index", "kind": "ENV" },
  { "word": "inspect", "kind": "ENV" },
  { "word": "invert", "kind": "ENV" },
  { "word": "keep_if", "kind": "ENV" },
  { "word": "key", "kind": "ENV" },
  { "word": "key?", "kind": "ENV" },
  { "word": "keys", "kind": "ENV" },
  { "word": "length", "kind": "ENV" },
  { "word": "member?", "kind": "ENV" },
  { "word": "rassoc", "kind": "ENV" },
  { "word": "rehash", "kind": "ENV" },
  { "word": "reject", "kind": "ENV" },
  { "word": "reject!", "kind": "ENV" },
  { "word": "shift", "kind": "ENV" },
  { "word": "size", "kind": "ENV" },
  { "word": "store", "kind": "ENV" },
  { "word": "to_a", "kind": "ENV" },
  { "word": "to_hash", "kind": "ENV" },
  { "word": "update", "kind": "ENV" },
  { "word": "value?", "kind": "ENV" },
  { "word": "values", "kind": "ENV" },
  { "word": "aliases", "kind": "Encoding" },
  { "word": "compatible?", "kind": "Encoding" },
  { "word": "default_external", "kind": "Encoding" },
  { "word": "default_external=", "kind": "Encoding" },
  { "word": "default_internal", "kind": "Encoding" },
  { "word": "default_internal=", "kind": "Encoding" },
  { "word": "find", "kind": "Encoding" },
  { "word": "list", "kind": "Encoding" },
  { "word": "locale_charmap", "kind": "Encoding" },
  { "word": "name_list", "kind": "Encoding" },
  { "word": "ascii_compatible?", "kind": "Encoding" },
  { "word": "dummy?", "kind": "Encoding" },
  { "word": "inspect", "kind": "Encoding" },
  { "word": "name", "kind": "Encoding" },
  { "word": "names", "kind": "Encoding" },
  { "word": "replicate", "kind": "Encoding" },
  { "word": "all?", "kind": "Enumerable" },
  { "word": "any?", "kind": "Enumerable" },
  { "word": "chunk", "kind": "Enumerable" },
  { "word": "chunk_while", "kind": "Enumerable" },
  { "word": "collect", "kind": "Enumerable" },
  { "word": "collect_concat", "kind": "Enumerable" },
  { "word": "count", "kind": "Enumerable" },
  { "word": "cycle", "kind": "Enumerable" },
  { "word": "detect", "kind": "Enumerable" },
  { "word": "drop", "kind": "Enumerable" },
  { "word": "drop_while", "kind": "Enumerable" },
  { "word": "each_cons", "kind": "Enumerable" },
  { "word": "each_entry", "kind": "Enumerable" },
  { "word": "each_slice", "kind": "Enumerable" },
  { "word": "each_with_index", "kind": "Enumerable" },
  { "word": "each_with_object", "kind": "Enumerable" },
  { "word": "entries", "kind": "Enumerable" },
  { "word": "find", "kind": "Enumerable" },
  { "word": "find_all", "kind": "Enumerable" },
  { "word": "find_index", "kind": "Enumerable" },
  { "word": "first", "kind": "Enumerable" },
  { "word": "flat_map", "kind": "Enumerable" },
  { "word": "grep", "kind": "Enumerable" },
  { "word": "grep_v", "kind": "Enumerable" },
  { "word": "group_by", "kind": "Enumerable" },
  { "word": "include?", "kind": "Enumerable" },
  { "word": "inject", "kind": "Enumerable" },
  { "word": "lazy", "kind": "Enumerable" },
  { "word": "map", "kind": "Enumerable" },
  { "word": "max", "kind": "Enumerable" },
  { "word": "max_by", "kind": "Enumerable" },
  { "word": "member?", "kind": "Enumerable" },
  { "word": "min", "kind": "Enumerable" },
  { "word": "min_by", "kind": "Enumerable" },
  { "word": "minmax", "kind": "Enumerable" },
  { "word": "minmax_by", "kind": "Enumerable" },
  { "word": "none?", "kind": "Enumerable" },
  { "word": "one?", "kind": "Enumerable" },
  { "word": "partition", "kind": "Enumerable" },
  { "word": "reduce", "kind": "Enumerable" },
  { "word": "reject", "kind": "Enumerable" },
  { "word": "reverse_each", "kind": "Enumerable" },
  { "word": "slice_after", "kind": "Enumerable" },
  { "word": "slice_before", "kind": "Enumerable" },
  { "word": "slice_when", "kind": "Enumerable" },
  { "word": "sort", "kind": "Enumerable" },
  { "word": "sort_by", "kind": "Enumerable" },
  { "word": "take", "kind": "Enumerable" },
  { "word": "to_a", "kind": "Enumerable" },
  { "word": "zip", "kind": "Enumerable" },
  { "word": "alive?", "kind": "Fiber" },
  { "word": "resume", "kind": "Fiber" },
  { "word": "transfer", "kind": "Fiber" },
  { "word": "absolute_path", "kind": "File" },
  { "word": "atime", "kind": "File" },
  { "word": "basename", "kind": "File" },
  { "word": "birthtime", "kind": "File" },
  { "word": "blockdev?", "kind": "File" },
  { "word": "chardev?", "kind": "File" },
  { "word": "chmod", "kind": "File" },
  { "word": "chown", "kind": "File" },
  { "word": "ctime", "kind": "File" },
  { "word": "delete", "kind": "File" },
  { "word": "directory?", "kind": "File" },
  { "word": "dirname", "kind": "File" },
  { "word": "executable?", "kind": "File" },
  { "word": "executable_real?", "kind": "File" },
  { "word": "exist?", "kind": "File" },
  { "word": "exists?", "kind": "File" },
  { "word": "expand_path", "kind": "File" },
  { "word": "extname", "kind": "File" },
  { "word": "file?", "kind": "File" },
  { "word": "fnmatch", "kind": "File" },
  { "word": "fnmatch?", "kind": "File" },
  { "word": "ftype", "kind": "File" },
  { "word": "grpowned?", "kind": "File" },
  { "word": "identical?", "kind": "File" },
  { "word": "join", "kind": "File" },
  { "word": "lchmod", "kind": "File" },
  { "word": "lchown", "kind": "File" },
  { "word": "link", "kind": "File" },
  { "word": "lstat", "kind": "File" },
  { "word": "mkfifo", "kind": "File" },
  { "word": "mtime", "kind": "File" },
  { "word": "new", "kind": "File" },
  { "word": "open", "kind": "File" },
  { "word": "owned?", "kind": "File" },
  { "word": "path", "kind": "File" },
  { "word": "pipe?", "kind": "File" },
  { "word": "readable?", "kind": "File" },
  { "word": "readable_real?", "kind": "File" },
  { "word": "readlink", "kind": "File" },
  { "word": "realdirpath", "kind": "File" },
  { "word": "realpath", "kind": "File" },
  { "word": "rename", "kind": "File" },
  { "word": "setgid?", "kind": "File" },
  { "word": "setuid?", "kind": "File" },
  { "word": "size", "kind": "File" },
  { "word": "size?", "kind": "File" },
  { "word": "socket?", "kind": "File" },
  { "word": "split", "kind": "File" },
  { "word": "stat", "kind": "File" },
  { "word": "sticky?", "kind": "File" },
  { "word": "symlink", "kind": "File" },
  { "word": "symlink?", "kind": "File" },
  { "word": "truncate", "kind": "File" },
  { "word": "any?", "kind": "Hash" },
  { "word": "assoc", "kind": "Hash" },
  { "word": "clear", "kind": "Hash" },
  { "word": "compare_by_identity", "kind": "Hash" },
  { "word": "compare_by_identity?", "kind": "Hash" },
  { "word": "default", "kind": "Hash" },
  { "word": "default=", "kind": "Hash" },
  { "word": "default_proc", "kind": "Hash" },
  { "word": "default_proc=", "kind": "Hash" },
  { "word": "delete", "kind": "Hash" },
  { "word": "delete_if", "kind": "Hash" },
  { "word": "dig", "kind": "Hash" },
  { "word": "each", "kind": "Hash" },
  { "word": "each_key", "kind": "Hash" },
  { "word": "each_pair", "kind": "Hash" },
  { "word": "each_value", "kind": "Hash" },
  { "word": "empty?", "kind": "Hash" },
  { "word": "eql?", "kind": "Hash" },
  { "word": "fetch", "kind": "Hash" },
  { "word": "fetch_values", "kind": "Hash" },
  { "word": "flatten", "kind": "Hash" },
  { "word": "has_key?", "kind": "Hash" },
  { "word": "has_value?", "kind": "Hash" },
  { "word": "hash", "kind": "Hash" },
  { "word": "include?", "kind": "Hash" },
  { "word": "inspect", "kind": "Hash" },
  { "word": "invert", "kind": "Hash" },
  { "word": "keep_if", "kind": "Hash" },
  { "word": "key", "kind": "Hash" },
  { "word": "key?", "kind": "Hash" },
  { "word": "keys", "kind": "Hash" },
  { "word": "length", "kind": "Hash" },
  { "word": "member?", "kind": "Hash" },
  { "word": "merge", "kind": "Hash" },
  { "word": "merge!", "kind": "Hash" },
  { "word": "rassoc", "kind": "Hash" },
  { "word": "rehash", "kind": "Hash" },
  { "word": "reject", "kind": "Hash" },
  { "word": "reject!", "kind": "Hash" },
  { "word": "shift", "kind": "Hash" },
  { "word": "size", "kind": "Hash" },
  { "word": "store", "kind": "Hash" },
  { "word": "to_a", "kind": "Hash" },
  { "word": "to_hash", "kind": "Hash" },
  { "word": "to_proc", "kind": "Hash" },
  { "word": "update", "kind": "Hash" },
  { "word": "value?", "kind": "Hash" },
  { "word": "values", "kind": "Hash" },
  { "word": "binread", "kind": "IO" },
  { "word": "binwrite", "kind": "IO" },
  { "word": "copy_stream", "kind": "IO" },
  { "word": "for_fd", "kind": "IO" },
  { "word": "foreach", "kind": "IO" },
  { "word": "new", "kind": "IO" },
  { "word": "open", "kind": "IO" },
  { "word": "pipe", "kind": "IO" },
  { "word": "popen", "kind": "IO" },
  { "word": "read", "kind": "IO" },
  { "word": "readlines", "kind": "IO" },
  { "word": "select", "kind": "IO" },
  { "word": "sysopen", "kind": "IO" },
  { "word": "try_convert", "kind": "IO" },
  { "word": "write", "kind": "IO" },
  { "word": "advise", "kind": "IO" },
  { "word": "autoclose=", "kind": "IO" },
  { "word": "autoclose?", "kind": "IO" },
  { "word": "binmode", "kind": "IO" },
  { "word": "binmode?", "kind": "IO" },
  { "word": "bytes", "kind": "IO" },
  { "word": "chars", "kind": "IO" },
  { "word": "close", "kind": "IO" },
  { "word": "close_on_exec=", "kind": "IO" },
  { "word": "close_on_exec?", "kind": "IO" },
  { "word": "close_read", "kind": "IO" },
  { "word": "close_write", "kind": "IO" },
  { "word": "closed?", "kind": "IO" },
  { "word": "codepoints", "kind": "IO" },
  { "word": "each", "kind": "IO" },
  { "word": "each_byte", "kind": "IO" },
  { "word": "each_char", "kind": "IO" },
  { "word": "each_codepoint", "kind": "IO" },
  { "word": "each_line", "kind": "IO" },
  { "word": "eof", "kind": "IO" },
  { "word": "eof?", "kind": "IO" },
  { "word": "external_encoding", "kind": "IO" },
  { "word": "fcntl", "kind": "IO" },
  { "word": "fdatasync", "kind": "IO" },
  { "word": "fileno", "kind": "IO" },
  { "word": "flush", "kind": "IO" },
  { "word": "fsync", "kind": "IO" },
  { "word": "getbyte", "kind": "IO" },
  { "word": "getc", "kind": "IO" },
  { "word": "gets", "kind": "IO" },
  { "word": "inspect", "kind": "IO" },
  { "word": "internal_encoding", "kind": "IO" },
  { "word": "ioctl", "kind": "IO" },
  { "word": "isatty", "kind": "IO" },
  { "word": "lineno", "kind": "IO" },
  { "word": "lineno=", "kind": "IO" },
  { "word": "lines", "kind": "IO" },
  { "word": "pid", "kind": "IO" },
  { "word": "pos", "kind": "IO" },
  { "word": "pos=", "kind": "IO" },
  { "word": "print", "kind": "IO" },
  { "word": "printf", "kind": "IO" },
  { "word": "putc", "kind": "IO" },
  { "word": "puts", "kind": "IO" },
  { "word": "read", "kind": "IO" },
  { "word": "read_nonblock", "kind": "IO" },
  { "word": "readbyte", "kind": "IO" },
  { "word": "readchar", "kind": "IO" },
  { "word": "readline", "kind": "IO" },
  { "word": "readlines", "kind": "IO" },
  { "word": "readpartial", "kind": "IO" },
  { "word": "reopen", "kind": "IO" },
  { "word": "rewind", "kind": "IO" },
  { "word": "seek", "kind": "IO" },
  { "word": "set_encoding", "kind": "IO" },
  { "word": "stat", "kind": "IO" },
  { "word": "sync", "kind": "IO" },
  { "word": "sync=", "kind": "IO" },
  { "word": "sysread", "kind": "IO" },
  { "word": "sysseek", "kind": "IO" },
  { "word": "syswrite", "kind": "IO" },
  { "word": "tell", "kind": "IO" },
  { "word": "to_i", "kind": "IO" },
  { "word": "to_io", "kind": "IO" },
  { "word": "tty?", "kind": "IO" },
  { "word": "ungetbyte", "kind": "IO" },
  { "word": "ungetc", "kind": "IO" },
  { "word": "write", "kind": "IO" },
  { "word": "write_nonblock", "kind": "IO" },
  { "word": "at", "kind": "Time" },
  { "word": "gm", "kind": "Time" },
  { "word": "local", "kind": "Time" },
  { "word": "mktime", "kind": "Time" },
  { "word": "new", "kind": "Time" },
  { "word": "now", "kind": "Time" },
  { "word": "utc", "kind": "Time" },
  { "word": "asctime", "kind": "Time" },
  { "word": "ctime", "kind": "Time" },
  { "word": "day", "kind": "Time" },
  { "word": "dst?", "kind": "Time" },
  { "word": "eql?", "kind": "Time" },
  { "word": "friday?", "kind": "Time" },
  { "word": "getgm", "kind": "Time" },
  { "word": "getlocal", "kind": "Time" },
  { "word": "getutc", "kind": "Time" },
  { "word": "gmt?", "kind": "Time" },
  { "word": "gmt_offset", "kind": "Time" },
  { "word": "gmtime", "kind": "Time" },
  { "word": "gmtoff", "kind": "Time" },
  { "word": "hash", "kind": "Time" },
  { "word": "hour", "kind": "Time" },
  { "word": "inspect", "kind": "Time" },
  { "word": "isdst", "kind": "Time" },
  { "word": "localtime", "kind": "Time" },
  { "word": "mday", "kind": "Time" },
  { "word": "min", "kind": "Time" },
  { "word": "mon", "kind": "Time" },
  { "word": "monday?", "kind": "Time" },
  { "word": "month", "kind": "Time" },
  { "word": "nsec", "kind": "Time" },
  { "word": "round", "kind": "Time" },
  { "word": "saturday?", "kind": "Time" },
  { "word": "sec", "kind": "Time" },
  { "word": "strftime", "kind": "Time" },
  { "word": "subsec", "kind": "Time" },
  { "word": "succ", "kind": "Time" },
  { "word": "sunday?", "kind": "Time" },
  { "word": "thursday?", "kind": "Time" },
  { "word": "to_a", "kind": "Time" },
  { "word": "to_f", "kind": "Time" },
  { "word": "to_i", "kind": "Time" },
  { "word": "to_r", "kind": "Time" },
  { "word": "to_s", "kind": "Time" },
  { "word": "tuesday?", "kind": "Time" },
  { "word": "tv_nsec", "kind": "Time" },
  { "word": "tv_sec", "kind": "Time" },
  { "word": "tv_usec", "kind": "Time" },
  { "word": "usec", "kind": "Time" },
  { "word": "utc", "kind": "Time" },
  { "word": "utc?", "kind": "Time" },
  { "word": "utc_offset", "kind": "Time" },
  { "word": "wday", "kind": "Time" },
  { "word": "wednesday?", "kind": "Time" },
  { "word": "yday", "kind": "Time" },
  { "word": "year", "kind": "Time" },
  { "word": "zone", "kind": "Time" }
]
